/* [project]/node_modules/tw-animate-css/dist/tw-animate.css [app-client] (css) */
@theme inline {
  --animation-delay-0: 0s; --animation-delay-75: 75ms; --animation-delay-100: .1s; --animation-delay-150: .15s; --animation-delay-200: .2s; --animation-delay-300: .3s; --animation-delay-500: .5s; --animation-delay-700: .7s; --animation-delay-1000: 1s; --animation-repeat-0: 0; --animation-repeat-1: 1; --animation-repeat-infinite: infinite; --animation-direction-normal: normal; --animation-direction-reverse: reverse; --animation-direction-alternate: alternate; --animation-direction-alternate-reverse: alternate-reverse; --animation-fill-mode-none: none; --animation-fill-mode-forwards: forwards; --animation-fill-mode-backwards: backwards; --animation-fill-mode-both: both; --percentage-0: 0; --percentage-5: .05; --percentage-10: .1; --percentage-15: .15; --percentage-20: .2; --percentage-25: .25; --percentage-30: .3; --percentage-35: .35; --percentage-40: .4; --percentage-45: .45; --percentage-50: .5; --percentage-55: .55; --percentage-60: .6; --percentage-65: .65; --percentage-70: .7; --percentage-75: .75; --percentage-80: .8; --percentage-85: .85; --percentage-90: .9; --percentage-95: .95; --percentage-100: 1; --percentage-translate-full: 1; --animate-in: enter var(--tw-duration, .15s) var(--tw-ease, ease) ; --animate-out: exit var(--tw-duration, .15s) var(--tw-ease, ease) ; @keyframes enter { from { opacity: var(--tw-enter-opacity, 1) ; transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0)) ; } } @keyframes exit { to { opacity: var(--tw-exit-opacity, 1) ; transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0)) ; } } --animate-accordion-down: accordion-down var(--tw-duration, .2s) ease-out; --animate-accordion-up: accordion-up var(--tw-duration, .2s) ease-out; --animate-collapsible-down: collapsible-down var(--tw-duration, .2s) ease-out; --animate-collapsible-up: collapsible-up var(--tw-duration, .2s) ease-out; @keyframes accordion-down { from { height: 0; } to { height: var(--radix-accordion-content-height, var(--bits-accordion-content-height, auto)) ; } } @keyframes accordion-up { from { height: var(--radix-accordion-content-height, var(--bits-accordion-content-height, auto)) ; } to { height: 0; } } @keyframes collapsible-down { from { height: 0; } to { height: var(--radix-collapsible-content-height, var(--bits-collapsible-content-height, auto)) ; } } @keyframes collapsible-up { from { height: var(--radix-collapsible-content-height, var(--bits-collapsible-content-height, auto)) ; } to { height: 0; } } --animate-caret-blink: caret-blink 1.25s ease-out infinite; @keyframes caret-blink { 0%, 70%, 100% { opacity: 1; } 20%, 50% { opacity: 0; } }
}

@utility delay- *  {
  animation-delay: calc(--value(number) * 1ms) ; animation-delay: --value(--animation-delay- * , [duration], "initial", [ * ]) ;
}

@utility repeat- *  {
  animation-iteration-count: --value(--animation-repeat- * , number, "initial", [ * ]) ;
}

@utility direction- *  {
  animation-direction: --value(--animation-direction- * , "initial", [ * ]) ;
}

@utility fill-mode- *  {
  animation-fill-mode: --value(--animation-fill-mode- * , "initial", [ * ]) ;
}

@utility running {
  animation-play-state: running;
}

@utility paused {
  animation-play-state: paused;
}

@utility play-state- *  {
  animation-play-state: --value("initial", [ * ]) ;
}

@utility fade-in {
  --tw-enter-opacity: 0;
}

@utility fade-in- *  {
  --tw-enter-opacity: calc(--value(number) / 100) ; --tw-enter-opacity: --value(--percentage- * , [ * ]) ;
}

@utility fade-out {
  --tw-exit-opacity: 0;
}

@utility fade-out- *  {
  --tw-exit-opacity: calc(--value(number) / 100) ; --tw-exit-opacity: --value(--percentage- * , [ * ]) ;
}

@utility zoom-in {
  --tw-enter-scale: 0;
}

@utility zoom-in- *  {
  --tw-enter-scale: calc(--value([percentage]) / 100%) ; --tw-enter-scale: calc(--value([ratio], [number])) ; --tw-enter-scale: --value(--percentage- * ) ;
}

@utility zoom-out {
  --tw-exit-scale: 0;
}

@utility zoom-out- *  {
  --tw-exit-scale: calc(--value([percentage]) / 100%) ; --tw-exit-scale: calc(--value([ratio], [number])) ; --tw-exit-scale: --value(--percentage- * ) ;
}

@utility spin-in {
  --tw-enter-rotate: 30deg;
}

@utility spin-in- *  {
  --tw-enter-rotate: calc(--value(number) * 1deg) ; --tw-enter-rotate: --value(--rotate- * , [angle]) ;
}

@utility spin-out {
  --tw-exit-rotate: 30deg;
}

@utility spin-out- *  {
  --tw-exit-rotate: calc(--value(number) * 1deg) ; --tw-exit-rotate: --value(--rotate- * , [angle]) ;
}

@utility slide-in-from-top {
  --tw-enter-translate-y: -100%;
}

@utility slide-in-from-top- *  {
  --tw-enter-translate-y: calc(--value(integer) * var(--spacing) * -1) ; --tw-enter-translate-y: calc(--value(--percentage- * , --percentage-translate- * ) * -100%) ; --tw-enter-translate-y: calc(--value(ratio) * -100%) ; --tw-enter-translate-y: calc(--value(--translate- * , [percentage], [length]) * -1) ;
}

@utility slide-in-from-bottom {
  --tw-enter-translate-y: 100%;
}

@utility slide-in-from-bottom- *  {
  --tw-enter-translate-y: calc(--value(integer) * var(--spacing)) ; --tw-enter-translate-y: calc(--value(--percentage- * , --percentage-translate- * ) * 100%) ; --tw-enter-translate-y: calc(--value(ratio) * 100%) ; --tw-enter-translate-y: --value(--translate- * , [percentage], [length]) ;
}

@utility slide-in-from-left {
  --tw-enter-translate-x: -100%;
}

@utility slide-in-from-left- *  {
  --tw-enter-translate-x: calc(--value(integer) * var(--spacing) * -1) ; --tw-enter-translate-x: calc(--value(--percentage- * , --percentage-translate- * ) * -100%) ; --tw-enter-translate-x: calc(--value(ratio) * 100%) ; --tw-enter-translate-x: calc(--value(--translate- * , [percentage], [length]) * -1) ;
}

@utility slide-in-from-right {
  --tw-enter-translate-x: 100%;
}

@utility slide-in-from-right- *  {
  --tw-enter-translate-x: calc(--value(integer) * var(--spacing)) ; --tw-enter-translate-x: calc(--value(--percentage- * , --percentage-translate- * ) * 100%) ; --tw-enter-translate-x: calc(--value(ratio) * 100%) ; --tw-enter-translate-x: --value(--translate- * , [percentage], [length]) ;
}

@utility slide-out-to-top {
  --tw-exit-translate-y: -100%;
}

@utility slide-out-to-top- *  {
  --tw-exit-translate-y: calc(--value(integer) * var(--spacing) * -1) ; --tw-exit-translate-y: calc(--value(--percentage- * , --percentage-translate- * ) * -100%) ; --tw-exit-translate-y: calc(--value(ratio) * 100%) ; --tw-exit-translate-y: calc(--value(--translate- * , [percentage], [length]) * -1) ;
}

@utility slide-out-to-bottom {
  --tw-exit-translate-y: 100%;
}

@utility slide-out-to-bottom- *  {
  --tw-exit-translate-y: calc(--value(integer) * var(--spacing)) ; --tw-exit-translate-y: calc(--value(--percentage- * , --percentage-translate- * ) * 100%) ; --tw-exit-translate-y: calc(--value(ratio) * 100%) ; --tw-exit-translate-y: --value(--translate- * , [percentage], [length]) ;
}

@utility slide-out-to-left {
  --tw-exit-translate-x: -100%;
}

@utility slide-out-to-left- *  {
  --tw-exit-translate-x: calc(--value(integer) * var(--spacing) * -1) ; --tw-exit-translate-x: calc(--value(--percentage- * , --percentage-translate- * ) * -100%) ; --tw-exit-translate-x: calc(--value(ratio) * 100%) ; --tw-exit-translate-x: calc(--value(--translate- * , [percentage], [length]) * -1) ;
}

@utility slide-out-to-right {
  --tw-exit-translate-x: 100%;
}

@utility slide-out-to-right- *  {
  --tw-exit-translate-x: calc(--value(integer) * var(--spacing)) ; --tw-exit-translate-x: calc(--value(--percentage- * , --percentage-translate- * ) * 100%) ; --tw-exit-translate-x: calc(--value(ratio) * 100%) ; --tw-exit-translate-x: --value(--translate- * , [percentage], [length]) ;
}


/* [project]/src/index.css [app-client] (css) */
@custom-variant dark (& :is(. dark * ));

:root {
  --radius: .625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(.129 .042 264.695);
  --card: oklch(1 0 0);
  --card-foreground: oklch(.129 .042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(.129 .042 264.695);
  --primary: oklch(.208 .042 265.755);
  --primary-foreground: oklch(.984 .003 247.858);
  --secondary: oklch(.968 .007 247.896);
  --secondary-foreground: oklch(.208 .042 265.755);
  --muted: oklch(.968 .007 247.896);
  --muted-foreground: oklch(.554 .046 257.417);
  --accent: oklch(.968 .007 247.896);
  --accent-foreground: oklch(.208 .042 265.755);
  --destructive: oklch(.577 .245 27.325);
  --border: oklch(.929 .013 255.508);
  --input: oklch(.929 .013 255.508);
  --ring: oklch(.704 .04 256.788);
  --chart-1: oklch(.646 .222 41.116);
  --chart-2: oklch(.6 .118 184.704);
  --chart-3: oklch(.398 .07 227.392);
  --chart-4: oklch(.828 .189 84.429);
  --chart-5: oklch(.769 .188 70.08);
  --sidebar: oklch(.984 .003 247.858);
  --sidebar-foreground: oklch(.129 .042 264.695);
  --sidebar-primary: oklch(.208 .042 265.755);
  --sidebar-primary-foreground: oklch(.984 .003 247.858);
  --sidebar-accent: oklch(.968 .007 247.896);
  --sidebar-accent-foreground: oklch(.208 .042 265.755);
  --sidebar-border: oklch(.929 .013 255.508);
  --sidebar-ring: oklch(.704 .04 256.788);
}

.dark {
  --background: oklch(.129 .042 264.695);
  --foreground: oklch(.984 .003 247.858);
  --card: oklch(.208 .042 265.755);
  --card-foreground: oklch(.984 .003 247.858);
  --popover: oklch(.208 .042 265.755);
  --popover-foreground: oklch(.984 .003 247.858);
  --primary: oklch(.929 .013 255.508);
  --primary-foreground: oklch(.208 .042 265.755);
  --secondary: oklch(.279 .041 260.031);
  --secondary-foreground: oklch(.984 .003 247.858);
  --muted: oklch(.279 .041 260.031);
  --muted-foreground: oklch(.704 .04 256.788);
  --accent: oklch(.279 .041 260.031);
  --accent-foreground: oklch(.984 .003 247.858);
  --destructive: oklch(.704 .191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(.551 .027 264.364);
  --chart-1: oklch(.488 .243 264.376);
  --chart-2: oklch(.696 .17 162.48);
  --chart-3: oklch(.769 .188 70.08);
  --chart-4: oklch(.627 .265 303.9);
  --chart-5: oklch(.645 .246 16.439);
  --sidebar: oklch(.208 .042 265.755);
  --sidebar-foreground: oklch(.984 .003 247.858);
  --sidebar-primary: oklch(.488 .243 264.376);
  --sidebar-primary-foreground: oklch(.984 .003 247.858);
  --sidebar-accent: oklch(.279 .041 260.031);
  --sidebar-accent-foreground: oklch(.984 .003 247.858);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(.551 .027 264.364);
}

@theme inline {
  --spacing-full-section: calc(var(--spacing) * 10) ; --radius-sm: calc(var(--radius)  - 4px) ; --radius-md: calc(var(--radius)  - 2px) ; --radius-lg: var(--radius) ; --radius-xl: calc(var(--radius)  + 4px) ; --color-background: var(--background) ; --color-foreground: var(--foreground) ; --color-card: var(--card) ; --color-card-foreground: var(--card-foreground) ; --color-popover: var(--popover) ; --color-popover-foreground: var(--popover-foreground) ; --color-primary: var(--primary) ; --color-primary-foreground: var(--primary-foreground) ; --color-secondary: var(--secondary) ; --color-secondary-foreground: var(--secondary-foreground) ; --color-muted: var(--muted) ; --color-muted-foreground: var(--muted-foreground) ; --color-accent: var(--accent) ; --color-accent-foreground: var(--accent-foreground) ; --color-destructive: var(--destructive) ; --color-border: var(--border) ; --color-input: var(--input) ; --color-ring: var(--ring) ; --color-chart-1: var(--chart-1) ; --color-chart-2: var(--chart-2) ; --color-chart-3: var(--chart-3) ; --color-chart-4: var(--chart-4) ; --color-chart-5: var(--chart-5) ; --color-sidebar: var(--sidebar) ; --color-sidebar-foreground: var(--sidebar-foreground) ; --color-sidebar-primary: var(--sidebar-primary) ; --color-sidebar-primary-foreground: var(--sidebar-primary-foreground) ; --color-sidebar-accent: var(--sidebar-accent) ; --color-sidebar-accent-foreground: var(--sidebar-accent-foreground) ; --color-sidebar-border: var(--sidebar-border) ; --color-sidebar-ring: var(--sidebar-ring) ;
}

@layer base {
  @apply border-border outline-ring / 50;

  @apply bg-background text-foreground;
}

.cal-sans-regular {
  font-family: Cal_Sans, sans-serif;
  font-style: normal;
  font-weight: 400;
}

.roboto-condensed-200 {
  font-optical-sizing: auto;
  font-family: Roboto_Condensed, sans-serif;
  font-weight: 200;
  font-style: thin;
}

.roboto-condensed-400 {
  font-optical-sizing: auto;
  font-family: Roboto_Condensed, sans-serif;
  font-style: normal;
  font-weight: 400;
}

.roboto-condensed-900 {
  font-optical-sizing: auto;
  font-family: Roboto_Condensed, sans-serif;
  font-style: normal;
  font-weight: 900;
}


/*# sourceMappingURL=_648085df._.css.map*/